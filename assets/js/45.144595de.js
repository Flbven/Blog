(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{501:function(s,a,n){"use strict";n.r(a);var t=n(30),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"脚本安全"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#脚本安全"}},[s._v("#")]),s._v(" 脚本安全")]),s._v(" "),n("h2",{attrs:{id:"set命令-shopt命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set命令-shopt命令"}},[s._v("#")]),s._v(" set命令，shopt命令")]),s._v(" "),n("p",[n("code",[s._v("set")]),s._v("命令是Bash脚本的重要环节，可以保证脚本更加安全。")]),s._v(" "),n("h3",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),n("p",[s._v("Bash执行脚本时会创建一个子Shell，这个子Shell就是脚本的执行环境，Bash默认给定了这个环境的各种参数。")]),s._v(" "),n("p",[n("code",[s._v("set")]),s._v("命令可以用来修改Shell环境的运行参数，即定制环境。")]),s._v(" "),n("p",[s._v("本处只涉及几个常用的，更多请见"),n("a",{attrs:{href:"https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方手册"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"set-u"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set-u"}},[s._v("#")]),s._v(" set -u")]),s._v(" "),n("p",[s._v("当在执行脚本遇到不存在的变量时，Bash会默认忽略它。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" bar\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("假设a是一个不存在的变量，执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" script.sh\n\nbar\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("code",[s._v("echo $a")]),s._v("输出了一个空行，Bash忽略了不存在的变量，并继续往下执行。而这在很多情况下并不是开发者想要的，正确的行为应当是报错。")]),s._v(" "),n("p",[s._v("在脚本头部加上"),n("code",[s._v("set -u")]),s._v("就能够达到这种效果，当遇到不存在的变量就会报错并停止执行。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -u\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" bar\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ bash script.sh\nscript.sh: line 4: a: unbound variable\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("code",[s._v("-u")]),s._v("还可以写为"),n("code",[s._v("-o nounset")]),s._v("，二者等价。")]),s._v(" "),n("h3",{attrs:{id:"set-x"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set-x"}},[s._v("#")]),s._v(" set -x")]),s._v(" "),n("p",[s._v("默认情况下，脚本执行后只输出运行结果。而如果多个命令连续执行，他们的运行结果就会连续输出，不便于观察。")]),s._v(" "),n("p",[n("code",[s._v("set -x")]),s._v("用于在输出执行结果前，先输出执行的那一行命令。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -x\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" script.sh\n+ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello\nhello\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("code",[s._v("-x")]),s._v("还可以写为"),n("code",[s._v("-o xtrace")]),s._v("，二者等价。")]),s._v(" "),n("p",[s._v("如果要关闭命令输出，可以使用"),n("code",[s._v("set +x")]),s._v("，可以用于对特定代码打开命令输出。")]),s._v(" "),n("h3",{attrs:{id:"bash的错误处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash的错误处理"}},[s._v("#")]),s._v(" Bash的错误处理")]),s._v(" "),n("p",[s._v("在执行脚本时，如果脚本里面有运行失败的命令Bash默认会继续执行后面的命令，这是很不安全的。")]),s._v(" "),n("p",[s._v("为了防止错误，一般采用下面的写法。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("当"),n("code",[s._v("command")]),s._v("执行失败时，脚本就会直接退出。")]),s._v(" "),n("h3",{attrs:{id:"set-e"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set-e"}},[s._v("#")]),s._v(" set -e")]),s._v(" "),n("p",[s._v("对于上面使用"),n("code",[s._v("||")]),s._v("来使脚本执行变得安全，"),n("code",[s._v("set -e")]),s._v("是更为简单的，它使得脚本只要发生错误，就终止执行。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\neco\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" script.sh\nscript.sh: line "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(": eco: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" not found\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("但是有时某些命令的非零返回值可能并不代表失败，或者是开发者希望在命令执行失败的前提下继续执行下去，这是可以暂时关闭"),n("code",[s._v("set -e")]),s._v("，之后再重新打开。")]),s._v(" "),n("p",[s._v("关闭的方法与"),n("code",[s._v("set -x")]),s._v("类似，使用"),n("code",[s._v("set +e")]),s._v("。")]),s._v(" "),n("p",[n("code",[s._v("-e")]),s._v("还可以写为"),n("code",[s._v("-o errexit")]),s._v("，二者等价。")]),s._v(" "),n("h3",{attrs:{id:"set-o-pipefail"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set-o-pipefail"}},[s._v("#")]),s._v(" set -o pipefail")]),s._v(" "),n("p",[n("code",[s._v("set -e")]),s._v("有一个例外情况，就是不适用于管道命令。")]),s._v(" "),n("p",[s._v("所谓管道命令就是将多个子命令通过管道运算符"),n("code",[s._v("|")]),s._v("组合为一个大命令。Bash会把最后一个子命令的返回值作为整个命令的返回值。也就是说只要最后一个子命令不失败，整个管道命令就会执行成功，"),n("code",[s._v("set -e")]),s._v("就失效了。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\nfoo "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" b\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" script.sh\nscript.sh: line "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(": foo: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" not found\nb\nhello\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("code",[s._v("set -o pipefail")]),s._v("就可以用来解决这种情况，只要一个子命令失败，整个管道命令就会失败，从而停止脚本执行。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -eo pipefail\n\nfoo "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" b\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("b\nscript.sh: line "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(": foo: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" not found\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"set-e-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set-e-2"}},[s._v("#")]),s._v(" set -E")]),s._v(" "),n("p",[s._v("一旦设置了"),n("code",[s._v("-e")]),s._v("参数，就会导致函数内的错误不会被"),n("code",[s._v("trap")]),s._v("命令捕获，而"),n("code",[s._v("-E")]),s._v("参数可以纠正这个行为，使得函数也能继承"),n("code",[s._v("trap")]),s._v("命令。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo ERR trap fired!"')]),s._v(" ERR\n\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("myfunc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    foo\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nmyfunc\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" script.sh\nscript.sh: line "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(": foo: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" not found\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("由于设置了"),n("code",[s._v("set -e")]),s._v("，函数内部的报错并没有被"),n("code",[s._v("trap")]),s._v("命令捕获，需要加上"),n("code",[s._v("-E")]),s._v("参数才可以。")]),s._v(" "),n("p",[s._v("将上面的"),n("code",[s._v("set -e")]),s._v("改为"),n("code",[s._v("set -Eeuo pipefail")]),s._v("后，执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" script.sh\nscript.sh: line "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(": foo: "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" not found\nERR "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" fired"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"其他参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他参数"}},[s._v("#")]),s._v(" 其他参数")]),s._v(" "),n("p",[n("code",[s._v("set")]),s._v("命令还有一些其他参数。")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("set -n")]),s._v("：等同于"),n("code",[s._v("set -o noexec")]),s._v("，不运行命令，只检查语法是否正确。")]),s._v(" "),n("li",[n("code",[s._v("set -f")]),s._v("：等同于"),n("code",[s._v("set -o noglob")]),s._v("，表示不对通配符进行文件名扩展。")]),s._v(" "),n("li",[n("code",[s._v("set -v")]),s._v("：等同于"),n("code",[s._v("set -o verbose")]),s._v("，表示打印 Shell 接收到的每一行输入。")]),s._v(" "),n("li",[n("code",[s._v("set -o noclobber")]),s._v("：防止使用重定向运算符"),n("code",[s._v(">")]),s._v("覆盖已经存在的文件。")])]),s._v(" "),n("p",[s._v("上面的"),n("code",[s._v("-f")]),s._v("和"),n("code",[s._v("-v")]),s._v("参数，可以分别使用"),n("code",[s._v("set +f")]),s._v("、"),n("code",[s._v("set +v")]),s._v("关闭。")]),s._v(" "),n("h3",{attrs:{id:"set命令总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#set命令总结"}},[s._v("#")]),s._v(" set命令总结")]),s._v(" "),n("p",[s._v("上面重点介绍的"),n("code",[s._v("set")]),s._v("命令的几个参数，一般都放在一起使用。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法一")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -Eeuxo pipefail\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写法二")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -Eeux\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -o pipefail\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"shopt命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shopt命令"}},[s._v("#")]),s._v(" shopt命令")]),s._v(" "),n("p",[n("code",[s._v("shopt")]),s._v("命令用来调整Shell的参数，跟"),n("code",[s._v("set")]),s._v("命令的作用很类似。他们的不同是"),n("code",[s._v("set")]),s._v("是从Ksh继承的，而"),n("code",[s._v("shopt")]),s._v("是Bash特有的。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v("\nautocd          off\ncdable_vars     off\ncdspell         off\ncheckhash       off\ncheckjobs       off\ncheckwinsize    on\ncmdhist         on\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("直接输入"),n("code",[s._v("shopt")]),s._v("可以查看所有参数，以及他们的开关状态。")]),s._v(" "),n("p",[s._v("后面跟着参数名，可以查询该参数是否打开。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v(" autocd\nautocd          off\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("(1) "),n("code",[s._v("-s")]),s._v("，用来打开某个参数。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v(" -s optionNameHere\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("(2)"),n("code",[s._v("-u")]),s._v("，用来关闭某个参数。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v(" -u optionNameHere\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("(3)"),n("code",[s._v("-q")]),s._v("，查询某个参数是否打开，但是并不直接输出查询结果，而是放在"),n("code",[s._v("$?")]),s._v("中，如果状态为0，表示该参数打开；如果为1，表示该参数关闭。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shopt")]),s._v(" -q globstar\n$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"脚本除错"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#脚本除错"}},[s._v("#")]),s._v(" 脚本除错")]),s._v(" "),n("h3",{attrs:{id:"常见错误"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见错误"}},[s._v("#")]),s._v(" 常见错误")]),s._v(" "),n("p",[s._v("编写Shell脚本时，一定要考虑到命令失败的情况，否则会很容易出错。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dir_name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/not/exist\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$dir_name")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" *\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这段脚本中如果目录"),n("code",[s._v("dir_name")]),s._v("不存在，命令就会执行失败，如果脚本还没有设置"),n("code",[s._v("set -e")]),s._v("，脚本继续执行下去就会导致"),n("code",[s._v("rm *")]),s._v("命令把当前目录文件全部删掉。")]),s._v(" "),n("p",[s._v("如果改成下面这样也会有问题：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$dir_name")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" *\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("因为如果"),n("code",[s._v("dir_name")]),s._v("为空，"),n("code",[s._v("cd")]),s._v("就会进入用户主目录，继续执行"),n("code",[s._v("rm *")]),s._v("。")]),s._v(" "),n("p",[s._v("下面的写法是正确的。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$dir_name")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$dir_name")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" *\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("首先判断目录是否存在再进行下面的操作。")]),s._v(" "),n("h3",{attrs:{id:"bash的-x参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash的-x参数"}},[s._v("#")]),s._v(" bash的"),n("code",[s._v("-x")]),s._v("参数")]),s._v(" "),n("p",[s._v("bash的"),n("code",[s._v("-x")]),s._v("参数可以在执行每一行命令前，打印该命令。如果命令出错，这样比较容易追查错误。")]),s._v(" "),n("h3",{attrs:{id:"环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[s._v("#")]),s._v(" 环境变量")]),s._v(" "),n("p",[s._v("有一些环境变量可以用来除错。")]),s._v(" "),n("h4",{attrs:{id:"lineno"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lineno"}},[s._v("#")]),s._v(" LINENO")]),s._v(" "),n("p",[s._v("变量"),n("code",[s._v("LINENO")]),s._v("返回它在脚本里面的行号。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is line '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LINENO")]),s._v('"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ ./script.sh\nThis is line "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"funcname"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#funcname"}},[s._v("#")]),s._v(" FUNCNAME")]),s._v(" "),n("p",[s._v("变量"),n("code",[s._v("FUNCNAME")]),s._v("返回一个数组，内容是当前的函数调用堆栈。该数组的0号成员是当前调用的函数，1号成员是调用当前函数的函数，依次类推。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: FUNCNAME0 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: FUNCNAME1 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: FUNCNAME2 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  func2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: FUNCNAME0 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: FUNCNAME1 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: FUNCNAME2 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nfunc1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("执行结果如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" script.sh\nfunc1: FUNCNAME0 is func1\nfunc1: FUNCNAME1 is main\nfunc1: FUNCNAME2 is\nfunc2: FUNCNAME0 is func2\nfunc2: FUNCNAME1 is func1\nfunc2: FUNCNAME2 is main\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"bash-source"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-source"}},[s._v("#")]),s._v(" BASH_SOURCE")]),s._v(" "),n("p",[s._v("变量"),n("code",[s._v("BASH_SOURCE")]),s._v("返回一个数组，内容是当前的脚本调用堆栈。该数组的0号成员是当前执行的脚本，1号成员是调用当前脚本的脚本，以此类推，跟变量"),n("code",[s._v("FUNCNAME")]),s._v("是一一对应关系。")]),s._v(" "),n("p",[s._v("下面有两个子脚本。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lib1.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: BASH_SOURCE0 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: BASH_SOURCE1 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: BASH_SOURCE2 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  func2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lib2.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: BASH_SOURCE0 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: BASH_SOURCE1 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: BASH_SOURCE2 is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("然后，主脚本"),n("code",[s._v("main.sh")]),s._v("调用上面两个子脚本。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# main.sh")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" lib1.sh\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" lib2.sh\n\nfunc1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("执行主脚本"),n("code",[s._v("main.sh")]),s._v("，会得到下面的结果。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ ./main.sh\nfunc1: BASH_SOURCE0 is lib1.sh\nfunc1: BASH_SOURCE1 is ./main.sh\nfunc1: BASH_SOURCE2 is\nfunc2: BASH_SOURCE0 is lib2.sh\nfunc2: BASH_SOURCE1 is lib1.sh\nfunc2: BASH_SOURCE2 is ./main.sh\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"bash-lineno"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-lineno"}},[s._v("#")]),s._v(" BASH_LINENO")]),s._v(" "),n("p",[s._v("变量"),n("code",[s._v("BASH_LINENO")]),s._v("返回一个数组，内容是每一轮调用对应的行号。"),n("code",[s._v("${BASH_LINENO[$i]}")]),s._v("跟"),n("code",[s._v("${FUNCNAME[$i]}")]),s._v("是一一对应关系，表示"),n("code",[s._v("${FUNCNAME[$i]}")]),s._v("在调用它的脚本文件"),n("code",[s._v("${BASH_SOURCE[$i+1]}")]),s._v("里面的行号。")]),s._v(" "),n("p",[s._v("下面有两个子脚本"),n("code",[s._v("lib1.sh")]),s._v("和"),n("code",[s._v("lib2.sh")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lib1.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: BASH_LINENO is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_LINENO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: FUNCNAME is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func1: BASH_SOURCE is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n\n  func2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lib2.sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: BASH_LINENO is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_LINENO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: FUNCNAME is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${FUNCNAME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func2: BASH_SOURCE is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("然后，主脚本"),n("code",[s._v("main.sh")]),s._v("调用上面两个子脚本。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# main.sh")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" lib1.sh\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" lib2.sh\n\nfunc1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("执行主脚本"),n("code",[s._v("main.sh")]),s._v("，会得到下面的结果。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ ./main.sh\nfunc1: "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_LINENO")]),s._v(" is "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\nfunc1: FUNCNAME is func1\nfunc1: "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),s._v(" is main.sh\nfunc2: "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_LINENO")]),s._v(" is "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\nfunc2: FUNCNAME is func2\nfunc2: "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),s._v(" is lib1.sh\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"mktemp命令-trap命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mktemp命令-trap命令"}},[s._v("#")]),s._v(" mktemp命令，trap命令")]),s._v(" "),n("p",[s._v("Bash 脚本有时需要创建临时文件或临时目录。常见的做法是，在"),n("code",[s._v("/tmp")]),s._v("目录里面创建文件或目录，这样做有很多弊端，使用"),n("code",[s._v("mktemp")]),s._v("命令是最安全的做法。")]),s._v(" "),n("h3",{attrs:{id:"临时文件的安全问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#临时文件的安全问题"}},[s._v("#")]),s._v(" 临时文件的安全问题")]),s._v(" "),n("p",[s._v("直接创建临时文件，尤其在"),n("code",[s._v("/tmp")]),s._v("目录中，是不安全的。")]),s._v(" "),n("p",[n("code",[s._v("/tmp")]),s._v("目录是所有人可读写的，所以临时文件可以被其他用户读到。")]),s._v(" "),n("p",[s._v("同时如果其他人知道临时文件的文件名，它可以创建符号链接，链接到临时文件，可能导致系统运行异常，也有可能向脚本提供一些恶意数据。")]),s._v(" "),n("p",[s._v("生成临时文件应遵循如下原则。")]),s._v(" "),n("p",[s._v("生成临时文件应该遵循下面的规则。")]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("创建前检查文件是否已经存在。")]),s._v(" "),n("li",[s._v("确保临时文件已成功创建。")]),s._v(" "),n("li",[s._v("临时文件必须有权限的限制。")]),s._v(" "),n("li",[s._v("临时文件要使用不可预测的文件名。")]),s._v(" "),n("li",[s._v("脚本退出时，要删除临时文件（使用"),n("code",[s._v("trap")]),s._v("命令）。")])])]),s._v(" "),n("h3",{attrs:{id:"mktemp命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mktemp命令"}},[s._v("#")]),s._v(" mktemp命令")]),s._v(" "),n("p",[n("code",[s._v("mktemp")]),s._v("命令就是为安全创建临时文件而设计的。虽然在创建临时文件之前，它不会检查临时文件是否存在，但是它支持唯一文件名和清除机制，因此可以减轻安全攻击的风险。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ mktemp\n/tmp/tmp.IVJaiZ5Hp6\n$ ll /tmp/tmp.IVJaiZ5Hp6\n-rw------- "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Dec "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(":22 /tmp/tmp.IVJaiZ5Hp6\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("直接使用"),n("code",[s._v("mktemp")]),s._v("命令可以创建一个文件名随机的文件，并且权限是仅用户本人可以读写的。")]),s._v(" "),n("p",[s._v("在Bash脚本中使用"),n("code",[s._v("mktemp")]),s._v("，为了确保临时文件创建成功，最好加上验证。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TMPFILE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("mktemp"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Our temp file is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TMPFILE")]),s._v('"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("为了保证脚本退出时临时文件被删除，可以使用"),n("code",[s._v("trap")]),s._v("命令指定退出时的清除操作。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("trap")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -f \"$TMPFILE\"'")]),s._v(" EXIT\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TMPFILE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("mktemp"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Our temp file is '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TMPFILE")]),s._v('"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"mktemp命令的参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mktemp命令的参数"}},[s._v("#")]),s._v(" mktemp命令的参数")]),s._v(" "),n("p",[n("code",[s._v("-d")]),s._v("参数可以创建一个临时目录。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ mktemp -d\n/tmp/tmp.Wcau5UjmN6\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("code",[s._v("-p")]),s._v("参数可以指定临时文件所在的目录。默认是使用"),n("code",[s._v("$TMPDIR")]),s._v("环境变量指定的目录，如果这个变量没设置，那么使用"),n("code",[s._v("/tmp")]),s._v("目录。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ mktemp -p /home/ruanyf/\n/home/ruanyf/tmp.FOKEtvs2H3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("code",[s._v("-t")]),s._v("参数可以指定临时文件的文件名模板，模板的末尾必须至少包含三个连续的"),n("code",[s._v("X")]),s._v("字符，表示随机字符，建议至少使用六个"),n("code",[s._v("X")]),s._v("。默认的文件名模板是"),n("code",[s._v("tmp.")]),s._v("后接十个随机字符。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ mktemp -t mytemp.XXXXXXX\n/tmp/mytemp.yZ1HgZV\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"trap命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#trap命令"}},[s._v("#")]),s._v(" trap命令")]),s._v(" "),n("p",[n("code",[s._v("trap")]),s._v("命令用来在 Bash 脚本中响应系统信号。")]),s._v(" "),n("p",[s._v("最常见的系统信号就是 SIGINT（中断），即按 Ctrl + C 所产生的信号。"),n("code",[s._v("trap")]),s._v("命令的"),n("code",[s._v("-l")]),s._v("参数，可以列出所有的系统信号。")]),s._v(" "),n("p",[n("code",[s._v("trap")]),s._v("的命令格式如下。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ trap [动作] [信号1] [信号2] ...\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("上面代码中，“动作”是一个 Bash 命令，“信号”常用的有以下几个。")]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("HUP：编号1，脚本与所在的终端脱离联系。")]),s._v(" "),n("li",[s._v("INT：编号2，用户按下 Ctrl + C，意图让脚本终止运行。")]),s._v(" "),n("li",[s._v("QUIT：编号3，用户按下 Ctrl + 斜杠，意图退出脚本。")]),s._v(" "),n("li",[s._v("KILL：编号9，该信号用于杀死进程。")]),s._v(" "),n("li",[s._v("TERM：编号15，这是"),n("code",[s._v("kill")]),s._v("命令发出的默认信号。")]),s._v(" "),n("li",[s._v("EXIT：编号0，这不是系统信号，而是 Bash 脚本特有的信号，不管什么情况，只要退出脚本就会产生。")])])]),s._v(" "),n("p",[n("code",[s._v("trap")]),s._v("命令响应"),n("code",[s._v("EXIT")]),s._v("信号的写法如下。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ trap 'rm -f \"$TMPFILE\"' EXIT\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("trap 命令的常见使用场景，就是在 Bash 脚本中指定退出时执行的清理命令。")])])}),[],!1,null,null,null);a.default=e.exports}}]);